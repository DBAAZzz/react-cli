"use strict";(self.webpackChunkreact_app=self.webpackChunkreact_app||[]).push([[916],{3688:(t,e,n)=>{n.r(e),n.d(e,{default:()=>O});var r=n(9301),o=n(444),u=n(9598),c="REDUCE",i={count:0},a={list:[1,2]},l=n(8538),f=n(96),s=(0,u.UY)({countReducer:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i,e=arguments.length>1?arguments[1]:void 0,n=JSON.parse(JSON.stringify(t));switch(e.type){case"ADD":return n.count=t.count+1,n;case c:return n.count=t.count-1,n;default:return n}},todoListReducer:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,e=arguments.length>1?arguments[1]:void 0,n=JSON.parse(JSON.stringify(t));switch(e.type){case"realPush":return n.list=[1,2,3],n;default:return n}}});const p=(0,u.MT)(s,(0,l.Uo)((0,u.md)(f.Z)));var y=n(2806),d=n(8867);function h(t){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function v(t,e){return(v=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function m(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=S(t);if(e){var o=S(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return E(this,n)}}function E(t,e){if(e&&("object"===h(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function S(t){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var O=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&v(t,e)}(i,t);var e,n,u,c=m(i);function i(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,i),(e=c.call(this,t)).state=p.getState().countReducer,e.cancleSub=function(){},e}return e=i,(n=[{key:"render",value:function(){var t=this;return r.createElement(d.Z.Provider,{value:"blue"},r.createElement("div",null,r.createElement("h1",{className:"title"},"这是home页面"),r.createElement("h2",null,this.state.count),r.createElement("button",{onClick:function(){return t.add()}},"增加"),r.createElement("button",{onClick:function(){return t.reduce()}},"减少"),r.createElement(o.rU,{to:"/user"},"user"),r.createElement(y.Z,{name:"按钮"})))}},{key:"componentDidMount",value:function(){var t=this;this.cancleSub=p.subscribe((function(){t.setState(p.getState().countReducer)}))}},{key:"componentWillUnmount",value:function(){this.cancleSub()}},{key:"reduce",value:function(){p.dispatch({type:"REDUCE"})}},{key:"add",value:function(){p.dispatch({type:"ADD"})}}])&&b(e.prototype,n),u&&b(e,u),i}(r.Component)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLjdkZThjMTI3LmpzIiwibWFwcGluZ3MiOiJvS0FDYUEsRUFBUyxTQ0NoQkMsRUFBZSxDQUNqQkMsTUFBTyxHQUVMQyxFQUFZLENBQ2RDLEtBQU0sQ0FBQyxFQUFHLEksa0JDQVJDLEdBQWFDLEVBQUFBLEVBQUFBLElBQWdCLENBQUVDLGFERVQsV0FBa0MsSUFBakNDLEVBQWlDLHVEQUF6QlAsRUFBY1EsRUFBVyx1Q0FDdERDLEVBQVdDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVVMLElBQ3pDLE9BQVFDLEVBQU9LLE1BQ1gsSURYVyxNQ1lQLE9BRE1KLEVBQVNSLE1BQVFNLEVBQU1OLE1BQVEsRUFDOUJRLEVBQ1gsS0FBS1YsRUFDRCxPQURTVSxFQUFTUixNQUFRTSxFQUFNTixNQUFRLEVBQ2pDUSxFQUNYLFFBQVMsT0FBT0EsSUNUMkJLLGdCRGFwQixXQUErQixJQUE5QlAsRUFBOEIsdURBQXRCTCxFQUFXTSxFQUFXLHVDQUN0REMsRUFBV0MsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVUwsSUFDekMsT0FBUUMsRUFBT0ssTUFDWCxJQUFLLFdBRUQsT0FEQUosRUFBU04sS0FBTyxDQUFDLEVBQUcsRUFBRyxHQUNoQk0sRUFDWCxRQUFTLE9BQU9BLE1DYnhCLFNBSmNNLEVBQUFBLEVBQUFBLElBQVlYLEdBQVlZLEVBQUFBLEVBQUFBLEtBQ2xDQyxFQUFBQSxFQUFBQSxJQUFnQkMsRUFBQUEsSyxvMUNDRkNDLEVBQUFBLFNBQUFBLEkseVBBQ2pCLFdBQVlDLEdBQU8sYSw0RkFBQSxVQUNmLGNBQU1BLElBQ0RiLE1BQVFjLEVBQUFBLFdBQWlCZixhQUM5QixFQUFLZ0IsVUFBWSxhQUhGLEUsbUNBS25CLFdBQVMsV0FDTCxPQUNJLGdCQUFDQyxFQUFBLFdBQUQsQ0FBdUJDLE1BQU0sUUFDekIsMkJBQ0ksc0JBQUlDLFVBQVUsU0FBZCxZQUNBLDBCQUFLQyxLQUFLbkIsTUFBTU4sT0FDaEIsMEJBQVEwQixRQUFTLGtCQUFNLEVBQUtDLFFBQTVCLE1BQ0EsMEJBQVFELFFBQVMsa0JBQU0sRUFBS0UsV0FBNUIsTUFDQSxnQkFBQyxLQUFELENBQU1DLEdBQUcsU0FBVCxRQUNBLGdCQUFDQyxFQUFBLEVBQUQsQ0FBaUJDLEtBQUssVywrQkFLdEMsV0FBb0IsV0FDaEJOLEtBQUtKLFVBQVlELEVBQUFBLFdBQWdCLFdBQzdCLEVBQUtZLFNBQVNaLEVBQUFBLFdBQWlCZixtQixrQ0FHdkMsV0FDSW9CLEtBQUtKLGMsb0JBRVQsV0FDSUQsRUFBQUEsU0FBZSxDQUNYUixLQUFNLGEsaUJBR2QsV0FDSVEsRUFBQUEsU0FBZSxDQUNYUixLQUFNLGEsNkJBbkNHTSxDQUFhZSxFQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LWFwcC8uL3NyYy9zdG9yZS9hY3Rpb25UeXBlLmpzIiwid2VicGFjazovL3JlYWN0LWFwcC8uL3NyYy9zdG9yZS9yZWR1Y2VyLmpzIiwid2VicGFjazovL3JlYWN0LWFwcC8uL3NyYy9zdG9yZS9pbmRleC5qcyIsIndlYnBhY2s6Ly9yZWFjdC1hcHAvLi9zcmMvcGFnZXMvQ2hhbmdlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBBREQgPSAnQUREJ1xyXG5leHBvcnQgY29uc3QgUkVEVUNFID0gJ1JFRFVDRSciLCJpbXBvcnQgeyBBREQsIFJFRFVDRSB9IGZyb20gJy4vYWN0aW9uVHlwZSdcclxuXHJcbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcclxuICAgIGNvdW50OiAwXHJcbn1cclxuY29uc3QgbGlzdFN0YXRlID0ge1xyXG4gICAgbGlzdDogWzEsIDJdXHJcbn1cclxuZXhwb3J0IGNvbnN0IGNvdW50UmVkdWNlciA9IChzdGF0ZSA9IGRlZmF1bHRTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICBsZXQgbmV3U3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHN0YXRlKSlcclxuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuICAgICAgICBjYXNlIEFERDogbmV3U3RhdGUuY291bnQgPSBzdGF0ZS5jb3VudCArIDE7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXdTdGF0ZTtcclxuICAgICAgICBjYXNlIFJFRFVDRTogbmV3U3RhdGUuY291bnQgPSBzdGF0ZS5jb3VudCAtIDE7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXdTdGF0ZTtcclxuICAgICAgICBkZWZhdWx0OiByZXR1cm4gbmV3U3RhdGVcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHRvZG9MaXN0UmVkdWNlciA9IChzdGF0ZSA9IGxpc3RTdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbiAgICBsZXQgbmV3U3RhdGUgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHN0YXRlKSlcclxuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcclxuICAgICAgICBjYXNlICdyZWFsUHVzaCc6IFxyXG4gICAgICAgICAgICBuZXdTdGF0ZS5saXN0ID0gWzEsIDIsIDNdXHJcbiAgICAgICAgICAgIHJldHVybiBuZXdTdGF0ZVxyXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiBuZXdTdGF0ZVxyXG4gICAgfVxyXG59XHJcbiIsImltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMsIGFwcGx5TWlkZGxld2FyZSB9IGZyb20gJ3JlZHV4JztcclxuaW1wb3J0IHsgY291bnRSZWR1Y2VyLCB0b2RvTGlzdFJlZHVjZXIgfSBmcm9tICcuL3JlZHVjZXInXHJcbmltcG9ydCB7IGNvbXBvc2VXaXRoRGV2VG9vbHMgfSBmcm9tICdyZWR1eC1kZXZ0b29scy1leHRlbnNpb24nO1xyXG5pbXBvcnQgdGh1bmsgZnJvbSAncmVkdXgtdGh1bmsnO1xyXG5cclxuXHJcbmNvbnN0IGFsbFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMoeyBjb3VudFJlZHVjZXIsIHRvZG9MaXN0UmVkdWNlciB9KVxyXG5cclxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShhbGxSZWR1Y2VyLCBjb21wb3NlV2l0aERldlRvb2xzKFxyXG4gICAgYXBwbHlNaWRkbGV3YXJlKHRodW5rKVxyXG4pKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0b3JlXHJcblxyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXHJcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xyXG5pbXBvcnQgc3RvcmUgZnJvbSAnLi4vLi4vc3RvcmUnXHJcbmltcG9ydCBCdXR0b25Db21wb25lbnQgZnJvbSAnLi4vLi4vY29tcG9uZW50L0J1dHRvbidcclxuaW1wb3J0IHRoZW1lQ29udGV4dCBmcm9tICcuLi8uLi9jb250ZXh0L3RoZW1lQ29udGV4dCdcclxuaW1wb3J0ICcuL3N0eWxlLnNjc3MnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIb21lIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpXHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0b3JlLmdldFN0YXRlKCkuY291bnRSZWR1Y2VyO1xyXG4gICAgICAgIHRoaXMuY2FuY2xlU3ViID0gKCkgPT4geyB9O1xyXG4gICAgfVxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDx0aGVtZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9XCJibHVlXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0aXRsZVwiPui/meaYr2hvbWXpobXpnaI8L2gxPlxyXG4gICAgICAgICAgICAgICAgICAgIDxoMj57dGhpcy5zdGF0ZS5jb3VudH08L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gdGhpcy5hZGQoKX0+5aKe5YqgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiB0aGlzLnJlZHVjZSgpfT7lh4/lsJE8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8TGluayB0bz1cIi91c2VyXCI+dXNlcjwvTGluaz5cclxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uQ29tcG9uZW50IG5hbWU9XCLmjInpkq5cIiAvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDwvdGhlbWVDb250ZXh0LlByb3ZpZGVyPlxyXG4gICAgICAgIClcclxuICAgIH1cclxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xyXG4gICAgICAgIHRoaXMuY2FuY2xlU3ViID0gc3RvcmUuc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZShzdG9yZS5nZXRTdGF0ZSgpLmNvdW50UmVkdWNlcilcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XHJcbiAgICAgICAgdGhpcy5jYW5jbGVTdWIoKTtcclxuICAgIH1cclxuICAgIHJlZHVjZSgpIHtcclxuICAgICAgICBzdG9yZS5kaXNwYXRjaCh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdSRURVQ0UnXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuICAgIGFkZCgpIHtcclxuICAgICAgICBzdG9yZS5kaXNwYXRjaCh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdBREQnXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxufSJdLCJuYW1lcyI6WyJSRURVQ0UiLCJkZWZhdWx0U3RhdGUiLCJjb3VudCIsImxpc3RTdGF0ZSIsImxpc3QiLCJhbGxSZWR1Y2VyIiwiY29tYmluZVJlZHVjZXJzIiwiY291bnRSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJuZXdTdGF0ZSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInR5cGUiLCJ0b2RvTGlzdFJlZHVjZXIiLCJjcmVhdGVTdG9yZSIsImNvbXBvc2VXaXRoRGV2VG9vbHMiLCJhcHBseU1pZGRsZXdhcmUiLCJ0aHVuayIsIkhvbWUiLCJwcm9wcyIsInN0b3JlIiwiY2FuY2xlU3ViIiwidGhlbWVDb250ZXh0IiwidmFsdWUiLCJjbGFzc05hbWUiLCJ0aGlzIiwib25DbGljayIsImFkZCIsInJlZHVjZSIsInRvIiwiQnV0dG9uIiwibmFtZSIsInNldFN0YXRlIiwiUmVhY3QiXSwic291cmNlUm9vdCI6IiJ9